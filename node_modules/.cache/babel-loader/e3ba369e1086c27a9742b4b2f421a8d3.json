{"remainingRequest":"C:\\Users\\furka\\OneDrive\\Masaüstü\\furkanselekspace\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\furka\\OneDrive\\Masaüstü\\furkanselekspace\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\furka\\OneDrive\\Masaüstü\\furkanselekspace\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\furka\\OneDrive\\Masaüstü\\furkanselekspace\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\furka\\OneDrive\\Masaüstü\\furkanselekspace\\frontend\\node_modules\\@splidejs\\vue-splide\\src\\js\\components\\Splide.vue?vue&type=template&id=69d27764","dependencies":[{"path":"C:\\Users\\furka\\OneDrive\\Masaüstü\\furkanselekspace\\frontend\\node_modules\\@splidejs\\vue-splide\\src\\js\\components\\Splide.vue","mtime":499162500000},{"path":"C:\\Users\\furka\\OneDrive\\Masaüstü\\furkanselekspace\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\furka\\OneDrive\\Masaüstü\\furkanselekspace\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\furka\\OneDrive\\Masaüstü\\furkanselekspace\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1628298225000},{"path":"C:\\Users\\furka\\OneDrive\\Masaüstü\\furkanselekspace\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\furka\\OneDrive\\Masaüstü\\furkanselekspace\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVuZGVyU2xvdCBhcyBfcmVuZGVyU2xvdCwgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogInNwbGlkZSIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAic3BsaWRlX19zbGlkZXIiCn07CnZhciBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAic3BsaWRlX190cmFjayIKfTsKdmFyIF9ob2lzdGVkXzQgPSB7CiAgY2xhc3M6ICJzcGxpZGVfX2xpc3QiCn07CnZhciBfaG9pc3RlZF81ID0gewogIGtleTogMSwKICBjbGFzczogInNwbGlkZV9fdHJhY2siCn07CnZhciBfaG9pc3RlZF82ID0gewogIGNsYXNzOiAic3BsaWRlX19saXN0Igp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFskcHJvcHMuaGFzU2xpZGVyV3JhcHBlciA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgidWwiLCBfaG9pc3RlZF80LCBbX3JlbmRlclNsb3QoX2N0eC4kc2xvdHMsICJkZWZhdWx0IildKV0pXSkpIDogKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfNSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoInVsIiwgX2hvaXN0ZWRfNiwgW19yZW5kZXJTbG90KF9jdHguJHNsb3RzLCAiZGVmYXVsdCIpXSldKSksIF9yZW5kZXJTbG90KF9jdHguJHNsb3RzLCAiY29udHJvbHMiKV0pOwp9"},{"version":3,"sources":["C:\\Users\\furka\\OneDrive\\Masaüstü\\furkanselekspace\\frontend\\node_modules\\@splidejs\\vue-splide\\src\\js\\components\\Splide.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;;AACJ,EAAA,KAAK,EAAC;;;AACJ,EAAA,KAAK,EAAC;;;AACL,EAAA,KAAK,EAAC;;;;AAMF,EAAA,KAAK,EAAC;;;AACZ,EAAA,KAAK,EAAC;;;uBAVd,mBAAA,CAgBM,KAhBN,EAAA,UAAA,EAgBM,CAf8B,MAAA,CAAA,gB,kBAAlC,mBAAA,CAMM,KANN,EAAA,UAAA,EAMM,CALJ,mBAAA,CAIM,KAJN,EAAA,UAAA,EAIM,CAHJ,mBAAA,CAEK,IAFL,EAAA,UAAA,EAEK,CADH,WAAA,CAAa,IAAA,CAAA,MAAb,EAAa,SAAb,CACG,CAFL,CAGI,CAJN,CAKI,CANN,C,mBAQA,mBAAA,CAIM,KAJN,EAAA,UAAA,EAIM,CAHJ,mBAAA,CAEK,IAFL,EAAA,UAAA,EAEK,CADH,WAAA,CAAa,IAAA,CAAA,MAAb,EAAa,SAAb,CACG,CAFL,CAGI,CAJN,C,CAOI,EADJ,WAAA,CAA6B,IAAA,CAAA,MAA7B,EAA6B,UAA7B,CACI,CAhBN,C","sourcesContent":["<template>\r\n  <div class=\"splide\">\r\n    <div class=\"splide__slider\" v-if=\"hasSliderWrapper\">\r\n      <div class=\"splide__track\">\r\n        <ul class=\"splide__list\">\r\n          <slot></slot>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else class=\"splide__track\">\r\n      <ul class=\"splide__list\">\r\n        <slot></slot>\r\n      </ul>\r\n    </div>\r\n\r\n    <slot name=\"controls\"></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Splide from '@splidejs/splide';\r\n  import { EVENTS } from \"../constants/events\";\r\n\r\n  export default {\r\n\t\tname: 'Splide',\r\n\r\n\t\tprops: {\r\n\t\t\toptions: {\r\n\t\t\t\ttype   : Object,\r\n\t\t\t\tdefault: () => ( {} ),\r\n\t\t\t},\r\n      hasSliderWrapper: Boolean,\r\n      extensions: {\r\n\t      type   : Object,\r\n\t      default: () => ( {} ),\r\n      },\r\n      transition: {\r\n\t      type   : Function,\r\n\t      default: null,\r\n      },\r\n\t\t\tslides: Array,\r\n\t\t},\r\n\r\n    data() {\r\n\t\t\treturn {\r\n\t\t\t\tsplide: null,\r\n      };\r\n    },\r\n\r\n    mounted() {\r\n\t\t\tthis.splide = new Splide( this.$el, this.options );\r\n\t\t\tthis.bind();\r\n\t    this.splide.mount( this.extensions, this.transition );\r\n    },\r\n\r\n    beforeDestroy() {\r\n\t\t\tthis.splide.destroy();\r\n    },\r\n\r\n\t  watch: {\r\n\t\t  /**\r\n\t\t   * If the slides prop is provided, watch it and remount Splide.\r\n\t\t   */\r\n\t\t  slides() {\r\n\t\t\t  this.remount();\r\n\t\t  },\r\n\t  },\r\n\r\n    computed: {\r\n\t\t\t/**\r\n       * Return the active index.\r\n       */\r\n\t\t\tindex() {\r\n\t\t\t\treturn this.splide.index;\r\n      },\r\n\r\n\t    /**\r\n\t     * Return the length of slides.\r\n\t     */\r\n\t    length() {\r\n\t\t    return this.splide.length;\r\n\t    },\r\n    },\r\n\r\n\t  methods: {\r\n\t\t  /**\r\n\t\t   * Go to the slide specified by the given control.\r\n\t\t   *\r\n\t\t   * @param {string|number} control - A control pattern.\r\n\t\t   * @param {boolean}       wait    - Optional. Whether to wait for transition.\r\n\t\t   */\r\n      go( control, wait = true ) {\r\n      \tthis.splide.go( control, wait );\r\n      },\r\n\r\n\t\t  /**\r\n\t\t   * Set sync target.\r\n\t\t   *\r\n\t\t   * @param {Splide} splide - A Splide instance.\r\n\t\t   */\r\n      sync( splide ) {\r\n      \tthis.splide.sync( splide );\r\n      \tthis.remount();\r\n      },\r\n\r\n      /**\r\n       * Listen to all Splide events and emit them with arguments.\r\n       */\r\n\t\t  bind() {\r\n\t\t\t  EVENTS.forEach( event => {\r\n\t\t\t\t  this.splide.on( event, ( ...args ) => {\r\n\t\t\t\t\t  this.$emit( `splide:${ event }`, this.splide, ...args );\r\n\t\t\t\t  } );\r\n\t\t\t  } );\r\n\t\t  },\r\n\r\n\t\t  /**\r\n       * Remount the Splide.\r\n\t\t   */\r\n\t\t  remount() {\r\n      \tthis.$nextTick( () => {\r\n\t\t      this.splide.destroy();\r\n\t\t      this.splide.mount();\r\n\t\t      this.bind();\r\n        } );\r\n      },\r\n\t  },\r\n  };\r\n</script>"],"sourceRoot":""}]}